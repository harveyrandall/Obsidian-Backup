/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/

'use strict';

var obsidian = require('obsidian');

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

// العربية
var ar = {};

// čeština
var cz = {};

// Dansk
var da = {};

// Deutsch
var de = {};

// English
var en = {
    // settings
    IMAGE_TOOLKIT_SETTINGS_TITLE: "Settings for Image Toolkit.",
    VIEW_IMAGE_TOGGLE_NAME: "Enable clicking and viewing a picture",
    VIEW_IMAGE_TOGGLE_DESC: "You can zoom, rotate and drag it on the popup layer when clicking on a picture.",
    // CPB = COMMUNITY_PLUGINS_BROWSER
    VIEW_IMAGE_IN_CPB_NAME: 'Enable clicking and viewing a picture in the Community Plugins browser',
    VIEW_IMAGE_IN_CPB_DESC: 'Turn on this option if you want to click and view a picture in the Community Plugins browser.',
    VIEW_IMAGE_WITH_A_LINK_NAME: 'Enable clicking and viewing a picture with a link',
    VIEW_IMAGE_WITH_A_LINK_DESC: 'Turn on this option if you want to click and view a picture with a link. (NOTE: The browser will be opened to visit the link and the picture will be popped up for viewing at the same time when clicking the picture.)',
    IMAG_MOVE_SPEED_NAME: 'Set the move speed of a picture',
    IMAG_MOVE_SPEED_DESC: 'When you move a picture by mouse or keyboard (up, down, left, right), the move speed of a picture can be set here if you want to move the picture faster or slower.',
    IMG_FULL_SCREEN_MODE_NAME: 'Full-screen previewing mode',
    FIT: 'Fit',
    FILL: 'Fill',
    STRETCH: 'Stretch',
    // toolbar icon title
    ZOOM_IN: "zoom in",
    ZOOM_OUT: "zoom out",
    FULL_SCREEN: 'full screen',
    REFRESH: "refresh",
    ROTATE_LEFT: "rotate left",
    ROTATE_RIGHT: "rotate right",
    SCALE_X: 'scale x',
    SCALE_Y: 'scale y',
    INVERT_COLOR: 'invert color',
    COPY: 'copy',
    COPY_IMAGE_SUCCESS: 'Copy the image successfully!',
    COPY_IMAGE_ERROR: 'Error Copying the image!'
};

// British English
var enGB = {};

// Español
var es = {};

// français
var fr = {};

// हिन्दी
var hi = {};

// Bahasa Indonesia
var id = {};

// Italiano
var it = {};

// 日本語
var ja = {};

// 한국어
var ko = {};

// Nederlands
var nl = {};

// Norsk
var no = {};

// język polski	
var pl = {};

// Português
var pt = {};

// Português do Brasil
// Brazilian Portuguese
var ptBR = {};

// Română
var ro = {};

// русский
var ru = {};

// Türkçe
var tr = {};

// 简体中文
var zhCN = {
    // settings
    IMAGE_TOOLKIT_SETTINGS_TITLE: "Image Toolkit 插件设置",
    VIEW_IMAGE_TOGGLE_NAME: "点击图片预览",
    VIEW_IMAGE_TOGGLE_DESC: "开启后，点击图片会弹出预览界面，可对图片进行缩放、旋转、拖动。",
    // CPB = COMMUNITY_PLUGINS_BROWSER
    VIEW_IMAGE_IN_CPB_NAME: '支持在社区插件页面预览图片',
    VIEW_IMAGE_IN_CPB_DESC: '开启后，支持在社区插件页面，点击图片预览。',
    VIEW_IMAGE_WITH_A_LINK_NAME: '支持预览带链接的图片',
    VIEW_IMAGE_WITH_A_LINK_DESC: '开启后，支持点击带链接的图片（注意：点击该图片，会同时打开浏览器访问指定地址和弹出预览图片）',
    IMAG_MOVE_SPEED_NAME: '图片移动速度设置',
    IMAG_MOVE_SPEED_DESC: '当使用键盘（上、下、左、右）移动图片时，可对图片移动速度进行设置。',
    IMG_FULL_SCREEN_MODE_NAME: '全屏预览模式',
    FIT: '自适应',
    FILL: '填充',
    STRETCH: '拉伸',
    // toolbar icon title
    ZOOM_IN: "放大",
    ZOOM_OUT: "缩小",
    FULL_SCREEN: "全屏",
    REFRESH: "刷新",
    ROTATE_LEFT: "左旋",
    ROTATE_RIGHT: "右旋",
    SCALE_X: 'x轴翻转',
    SCALE_Y: 'y轴翻转',
    INVERT_COLOR: '反色',
    COPY: '复制',
    // tip
    COPY_IMAGE_SUCCESS: '拷贝图片成功！',
    COPY_IMAGE_ERROR: '拷贝图片失败！'
};

// 繁體中文
var zhTW = {
    // settings
    IMAGE_TOOLKIT_SETTINGS_TITLE: "image toolkit 設定",
    VIEW_IMAGE_TOGGLE_NAME: "啟用點擊圖片以檢視",
    VIEW_IMAGE_TOGGLE_DESC: "點擊圖片後，你可以對彈出視窗縮放、旋轉與拖曳",
    // toolbar icon title
    ZOOM_IN: "放大",
    ZOOM_OUT: "縮小",
    FULL_SCREEN: '全螢幕',
    REFRESH: "重整",
    ROTATE_LEFT: "向左旋轉",
    ROTATE_RIGHT: "向右旋轉",
    SCALE_X: 'x 軸縮放',
    SCALE_Y: 'y 軸縮放',
    INVERT_COLOR: '色彩反轉',
    COPY: '複製',
    COPY_IMAGE_SUCCESS: '成功複製圖片！'
};

const localeMap = {
    ar,
    cs: cz,
    da,
    de,
    en,
    "en-gb": enGB,
    es,
    fr,
    hi,
    id,
    it,
    ja,
    ko,
    nl,
    nn: no,
    pl,
    pt,
    "pt-br": ptBR,
    ro,
    ru,
    tr,
    "zh-cn": zhCN,
    "zh-tw": zhTW,
};
const locale = localeMap[obsidian.moment.locale()];
function t(str) {
    if (!locale) {
        console.error("Error: Image toolkit locale not found", obsidian.moment.locale());
    }
    return (locale && locale[str]) || en[str];
}

const ZOOM_FACTOR = 0.8;
const IMG_TOOLBAR_ICONS = [{
        key: 'zoom_in',
        title: "ZOOM_IN",
        class: 'toolbar_zoom_im'
    }, {
        key: 'zoom_out',
        title: "ZOOM_OUT",
        class: 'toolbar_zoom_out'
    }, {
        key: 'full_screen',
        title: "FULL_SCREEN",
        class: 'toolbar_full_screen'
    }, {
        key: 'refresh',
        title: "REFRESH",
        class: 'toolbar_refresh'
    }, {
        key: 'rotate_left',
        title: "ROTATE_LEFT",
        class: 'toolbar_rotate_left'
    }, {
        key: 'rotate_right',
        title: "ROTATE_RIGHT",
        class: 'toolbar_rotate_right'
    }, {
        key: 'scale_x',
        title: "SCALE_X",
        class: 'toolbar_scale_x'
    }, {
        key: 'scale_y',
        title: "SCALE_Y",
        class: 'toolbar_scale_y'
    }, {
        key: 'invert_color',
        title: "INVERT_COLOR",
        class: 'toolbar_invert_color'
    }, {
        key: 'copy',
        title: "COPY",
        class: 'toolbar_copy'
    }];
const IMG_FULL_SCREEN_MODE = {
    FIT: 'FIT',
    FILL: 'FILL',
    STRETCH: 'STRETCH'
};

const DEFAULT_SETTINGS = {
    viewImageToggle: true,
    viewImageInCPB: true,
    viewImageWithALink: false,
    imageMoveSpeed: 10,
    imgFullScreenMode: IMG_FULL_SCREEN_MODE.FIT
    // imgActiveConflict: false
};
class ImageToolkitSettingTab extends obsidian.PluginSettingTab {
    constructor(app, plugin) {
        super(app, plugin);
        this.plugin = plugin;
        DEFAULT_SETTINGS.imageMoveSpeed = this.plugin.settings.imageMoveSpeed;
        DEFAULT_SETTINGS.imgFullScreenMode = this.plugin.settings.imgFullScreenMode;
    }
    display() {
        let { containerEl } = this;
        containerEl.empty();
        containerEl.createEl('h2', { text: t("IMAGE_TOOLKIT_SETTINGS_TITLE") });
        new obsidian.Setting(containerEl)
            .setName(t("VIEW_IMAGE_TOGGLE_NAME"))
            .setDesc(t("VIEW_IMAGE_TOGGLE_DESC"))
            .addToggle(toggle => toggle
            .setValue(this.plugin.settings.viewImageToggle)
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            this.plugin.settings.viewImageToggle = value;
            this.plugin.toggleViewImage(value);
            yield this.plugin.saveSettings();
        })));
        new obsidian.Setting(containerEl)
            .setName(t("VIEW_IMAGE_IN_CPB_NAME"))
            .setDesc(t("VIEW_IMAGE_IN_CPB_DESC"))
            .addToggle(toggle => toggle
            .setValue(this.plugin.settings.viewImageInCPB)
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            this.plugin.settings.viewImageInCPB = value;
            this.plugin.toggleViewImageInCPB(value);
            yield this.plugin.saveSettings();
        })));
        new obsidian.Setting(containerEl)
            .setName(t("VIEW_IMAGE_WITH_A_LINK_NAME"))
            .setDesc(t("VIEW_IMAGE_WITH_A_LINK_DESC"))
            .addToggle(toggle => toggle
            .setValue(this.plugin.settings.viewImageWithALink)
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            this.plugin.settings.viewImageWithALink = value;
            yield this.plugin.saveSettings();
        })));
        let scaleText;
        new obsidian.Setting(containerEl)
            .setName(t("IMAG_MOVE_SPEED_NAME"))
            .setDesc(t("IMAG_MOVE_SPEED_DESC"))
            .addSlider(slider => slider
            .setLimits(1, 30, 1)
            .setValue(this.plugin.settings.imageMoveSpeed)
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            scaleText.innerText = " " + value.toString();
            this.plugin.settings.imageMoveSpeed = value;
            DEFAULT_SETTINGS.imageMoveSpeed = value;
            this.plugin.saveSettings();
        })))
            .settingEl.createDiv('', (el) => {
            scaleText = el;
            el.style.minWidth = "2.3em";
            el.style.textAlign = "right";
            el.innerText = " " + this.plugin.settings.imageMoveSpeed.toString();
        });
        new obsidian.Setting(containerEl)
            .setName(t("IMG_FULL_SCREEN_MODE_NAME"))
            .addDropdown((dropdown) => __awaiter(this, void 0, void 0, function* () {
            for (const key in IMG_FULL_SCREEN_MODE) {
                // @ts-ignore
                dropdown.addOption(key, t(key));
            }
            dropdown.setValue(DEFAULT_SETTINGS.imgFullScreenMode);
            dropdown.onChange((option) => __awaiter(this, void 0, void 0, function* () {
                this.plugin.settings.imgFullScreenMode = option;
                DEFAULT_SETTINGS.imgFullScreenMode = option;
                yield this.plugin.saveSettings();
            }));
        }));
    }
}

/**
 * calculate zoom size of the target image
 * @param imgSrc
 * @returns
 */
function calculateImgZoomSize(realImg, TARGET_IMG_INFO) {
    // 当前窗口宽高（可视宽高）
    const windowWidth = document.documentElement.clientWidth || document.body.clientWidth;
    const windowHeight = document.documentElement.clientHeight || document.body.clientHeight;
    // 当前窗口缩放后的宽高
    const windowZoomWidth = windowWidth * ZOOM_FACTOR;
    const windowZoomHeight = windowHeight * ZOOM_FACTOR;
    let tempWidth = realImg.width, tempHeight = realImg.height;
    if (realImg.height > windowZoomHeight) {
        tempHeight = windowZoomHeight;
        if ((tempWidth = tempHeight / realImg.height * realImg.width) > windowZoomWidth) {
            tempWidth = windowZoomWidth;
        }
    }
    else if (realImg.width > windowZoomWidth) {
        tempWidth = windowZoomWidth;
        tempHeight = tempWidth / realImg.width * realImg.height;
    }
    let width = tempWidth + 'px';
    let height = tempHeight + 'px';
    // cache image info: curWidth, curHeight, realWidth, realHeight, left, top
    TARGET_IMG_INFO.left = (windowWidth - tempWidth) / 2;
    TARGET_IMG_INFO.top = (windowHeight - tempHeight) / 2;
    TARGET_IMG_INFO.curWidth = tempWidth;
    TARGET_IMG_INFO.curHeight = tempHeight;
    TARGET_IMG_INFO.realWidth = realImg.width;
    TARGET_IMG_INFO.realHeight = realImg.height;
    const left = TARGET_IMG_INFO.left + 'px';
    const top = TARGET_IMG_INFO.top + 'px';
    /* console.log('calculateImgZoomSize', 'realImg: ' + realImg.width + ',' + realImg.height,
        'tempSize: ' + tempWidth + ',' + tempHeight,
        'windowZoomSize: ' + windowZoomWidth + ',' + windowZoomHeight,
        'windowSize: ' + windowWidth + ',' + windowHeight); */
    return { width, height, top, left };
}
/**
 * zoom an image
 * @param ratio
 * @param imgInfo
 * @returns
 */
const zoom = (ratio, TARGET_IMG_INFO, offsetSize) => {
    const zoomInFlag = ratio > 0;
    ratio = zoomInFlag ? 1 + ratio : 1 / (1 - ratio);
    const curWidth = TARGET_IMG_INFO.curWidth;
    // const curHeight = TARGET_IMG_INFO.curHeight;
    let zoomRatio = curWidth * ratio / TARGET_IMG_INFO.realWidth;
    const newWidth = TARGET_IMG_INFO.realWidth * zoomRatio;
    const newHeight = TARGET_IMG_INFO.realHeight * zoomRatio;
    const left = TARGET_IMG_INFO.left + (offsetSize.offsetX - offsetSize.offsetX * ratio);
    const top = TARGET_IMG_INFO.top + (offsetSize.offsetY - offsetSize.offsetY * ratio);
    // cache image info: curWidth, curHeight, left, top
    TARGET_IMG_INFO.curWidth = newWidth;
    TARGET_IMG_INFO.curHeight = newHeight;
    TARGET_IMG_INFO.left = left;
    TARGET_IMG_INFO.top = top;
    return { newWidth, left, top };
};
const transform = (TARGET_IMG_INFO) => {
    let transform = 'rotate(' + TARGET_IMG_INFO.rotate + 'deg)';
    if (TARGET_IMG_INFO.scaleX) {
        transform += ' scaleX(-1)';
    }
    if (TARGET_IMG_INFO.scaleY) {
        transform += ' scaleY(-1)';
    }
    TARGET_IMG_INFO.imgViewEl.style.setProperty('transform', transform);
};
const invertImgColor = (imgEle, open) => {
    if (open) {
        imgEle.style.setProperty('filter', 'invert(1) hue-rotate(180deg)');
        imgEle.style.setProperty('mix-blend-mode', 'screen');
    }
    else {
        imgEle.style.setProperty('filter', 'none');
        imgEle.style.setProperty('mix-blend-mode', 'normal');
    }
    // open ? imgEle.addClass('image-toolkit-img-invert') : imgEle.removeClass('image-toolkit-img-invert');
};
function copyImage(imgEle, width, height) {
    let image = new Image();
    image.crossOrigin = 'anonymous';
    image.src = imgEle.src;
    image.onload = () => {
        const canvas = document.createElement('canvas');
        canvas.width = image.width;
        canvas.height = image.height;
        const ctx = canvas.getContext('2d');
        ctx.drawImage(image, 0, 0);
        canvas.toBlob((blob) => {
            // @ts-ignore
            const item = new ClipboardItem({ "image/png": blob });
            // @ts-ignore
            navigator.clipboard.write([item]);
            new obsidian.Notice(t("COPY_IMAGE_SUCCESS"));
        });
    };
    image.onerror = () => {
        new obsidian.Notice(t("COPY_IMAGE_ERROR"));
    };
}

let DRAGGING = false;
let IMG_PLAYER = false;
let REAL_IMG_INTERVAL;
const DEFAULT_IMG_STYLES = {
    transform: 'none',
    filter: 'none',
    mixBlendMode: 'normal'
};
// let IMG_MOVE_OFFSET: number = 5;
let ARROW_PRESS_STATUS = {
    arrowUp: false,
    arrowDown: false,
    arrowLeft: false,
    arrowRight: false
};
const TARGET_IMG_INFO = {
    state: false,
    viewContainerEl: null,
    imgViewEl: null,
    imgTitleEl: null,
    imgTipEl: null,
    imgTipTimeout: null,
    imgFooterEl: null,
    imgPlayerEl: null,
    imgPlayerImgViewEl: null,
    curWidth: 0,
    curHeight: 0,
    realWidth: 0,
    realHeight: 0,
    left: 0,
    top: 0,
    moveX: 0,
    moveY: 0,
    rotate: 0,
    invertColor: false,
    scaleX: false,
    scaleY: false
};
function renderViewContainer(targetEl, containerEl) {
    initViewContainer(targetEl, containerEl);
    openViewContainer();
    refreshImg(targetEl.src, targetEl.alt);
}
function initViewContainer(targetEl, containerEl) {
    if (null == TARGET_IMG_INFO.viewContainerEl || !TARGET_IMG_INFO.viewContainerEl) {
        // console.log('initViewContainer....', containerEl);
        // <div class="image-toolkit-view-container">
        TARGET_IMG_INFO.viewContainerEl = createDiv();
        TARGET_IMG_INFO.viewContainerEl.setAttribute('class', 'image-toolkit-view-container');
        containerEl.appendChild(TARGET_IMG_INFO.viewContainerEl);
        // <div class="img-container"> <img class="img-view" src="" alt=""> </div>
        const imgContainerDiv = createDiv();
        imgContainerDiv.setAttribute('class', 'img-container');
        TARGET_IMG_INFO.imgViewEl = createEl('img');
        TARGET_IMG_INFO.imgViewEl.setAttribute('class', 'img-view');
        TARGET_IMG_INFO.imgViewEl.setAttribute('src', '');
        TARGET_IMG_INFO.imgViewEl.setAttribute('alt', '');
        imgContainerDiv.appendChild(TARGET_IMG_INFO.imgViewEl);
        TARGET_IMG_INFO.viewContainerEl.appendChild(imgContainerDiv); // img-container
        // <div class="img-close"></div>
        // const imgCloseDiv = createDiv();
        // imgCloseDiv.innerHTML = CLOSE_ICON.svg;
        // imgCloseDiv.setAttribute('class', 'img-close');
        // TARGET_IMG_INFO.viewContainerEl.appendChild(imgCloseDiv); // img-close
        // <div class="img-tip"></div>
        TARGET_IMG_INFO.imgTipEl = createDiv();
        TARGET_IMG_INFO.imgTipEl.setAttribute('class', 'img-tip');
        TARGET_IMG_INFO.imgTipEl.hidden = true;
        TARGET_IMG_INFO.viewContainerEl.appendChild(TARGET_IMG_INFO.imgTipEl); // img-tip
        // <div class="img-footer"> ... <div>
        TARGET_IMG_INFO.viewContainerEl.appendChild(TARGET_IMG_INFO.imgFooterEl = createDiv()); // img-footer
        TARGET_IMG_INFO.imgFooterEl.setAttribute('class', 'img-footer');
        // <div class="img-title"></div>
        TARGET_IMG_INFO.imgTitleEl = createDiv();
        TARGET_IMG_INFO.imgTitleEl.setAttribute('class', 'img-title');
        TARGET_IMG_INFO.imgFooterEl.appendChild(TARGET_IMG_INFO.imgTitleEl);
        // <ul class="img-toolbar">
        const imgToolbarUl = createEl('ul');
        imgToolbarUl.setAttribute('class', 'img-toolbar');
        TARGET_IMG_INFO.imgFooterEl.appendChild(imgToolbarUl);
        for (const toolbar of IMG_TOOLBAR_ICONS) {
            const toolbarLi = createEl('li');
            toolbarLi.setAttribute('class', toolbar.class);
            toolbarLi.setAttribute('alt', toolbar.key);
            // @ts-ignore
            toolbarLi.setAttribute('title', t(toolbar.title));
            imgToolbarUl.appendChild(toolbarLi);
        }
        // add event: for img-toolbar ul
        imgToolbarUl.addEventListener('click', clickToolbarUl);
        // <div class="img-player"> <img src=''> </div>
        TARGET_IMG_INFO.viewContainerEl.appendChild(TARGET_IMG_INFO.imgPlayerEl = createDiv()); // img-player
        TARGET_IMG_INFO.imgPlayerEl.setAttribute('class', 'img-player');
        TARGET_IMG_INFO.imgPlayerEl.appendChild(TARGET_IMG_INFO.imgPlayerImgViewEl = createEl('img'));
    }
    /*const targetImgStyle = window.getComputedStyle(targetEl);
    if (targetImgStyle) {
        DEFAULT_IMG_STYLES.transform = targetImgStyle.transform;
        DEFAULT_IMG_STYLES.filter = targetImgStyle.filter;
        // @ts-ignore
        DEFAULT_IMG_STYLES.mixBlendMode = targetImgStyle.mixBlendMode;
        // let rotateDeg = DEFAULT_IMG_STYLES.transform.match(/rotate\(([\-|\+]?\d+)deg\)/);
        // if (rotateDeg && rotateDeg.length > 1) {
        //     TARGET_IMG_INFO.rotate = parseInt(rotateDeg[1]);
        // }
    }*/
    initDefaultData();
    // show the clicked image
    renderImgTitle(targetEl.alt);
    // add all events
    addOrRemoveEvent(true);
}
function initDefaultData() {
    DRAGGING = false;
    IMG_PLAYER = false;
    REAL_IMG_INTERVAL = null;
    ARROW_PRESS_STATUS.arrowUp = false;
    ARROW_PRESS_STATUS.arrowDown = false;
    ARROW_PRESS_STATUS.arrowLeft = false;
    ARROW_PRESS_STATUS.arrowRight = false;
    TARGET_IMG_INFO.invertColor = false;
    TARGET_IMG_INFO.scaleX = false;
    TARGET_IMG_INFO.scaleY = false;
}
function openViewContainer() {
    if (!TARGET_IMG_INFO.viewContainerEl) {
        console.error('obsidian-image-toolkit: image-toolkit-view-container has not been initialized.');
        return;
    }
    TARGET_IMG_INFO.viewContainerEl.style.setProperty('display', 'block');
    TARGET_IMG_INFO.state = true;
}
const closeViewContainer = (event) => {
    if (event) {
        const targetClassName = event.target.className;
        if ('img-container' != targetClassName && 'image-toolkit-view-container' != targetClassName && 'img-close' != targetClassName) {
            return;
        }
    }
    if (TARGET_IMG_INFO.viewContainerEl) {
        TARGET_IMG_INFO.viewContainerEl.style.setProperty('display', 'none');
        TARGET_IMG_INFO.state = false;
        renderImgTitle('');
        renderImgView('', '');
        // remove all events
        addOrRemoveEvent(false);
    }
};
function removeViewContainer() {
    if (TARGET_IMG_INFO.viewContainerEl) {
        TARGET_IMG_INFO.viewContainerEl.remove();
    }
    DRAGGING = false;
    TARGET_IMG_INFO.state = false;
    TARGET_IMG_INFO.viewContainerEl = null;
    TARGET_IMG_INFO.imgViewEl = null;
    TARGET_IMG_INFO.imgTitleEl = null;
    TARGET_IMG_INFO.curWidth = 0;
    TARGET_IMG_INFO.curHeight = 0;
    TARGET_IMG_INFO.realWidth = 0;
    TARGET_IMG_INFO.realHeight = 0;
    TARGET_IMG_INFO.moveX = 0;
    TARGET_IMG_INFO.moveY = 0;
    TARGET_IMG_INFO.rotate = 0;
}
function renderImgTitle(alt) {
    if (TARGET_IMG_INFO.imgTitleEl) {
        TARGET_IMG_INFO.imgTitleEl.setText(alt);
    }
}
function renderImgView(src, alt) {
    if (TARGET_IMG_INFO.imgViewEl) {
        TARGET_IMG_INFO.imgViewEl.setAttribute('src', src);
        TARGET_IMG_INFO.imgViewEl.setAttribute('alt', alt);
    }
}
function renderImgTip() {
    if (TARGET_IMG_INFO.realWidth > 0 && TARGET_IMG_INFO.curWidth > 0) {
        if (TARGET_IMG_INFO.imgTipTimeout) {
            clearTimeout(TARGET_IMG_INFO.imgTipTimeout);
        }
        TARGET_IMG_INFO.imgTipEl.hidden = false;
        TARGET_IMG_INFO.imgTipEl.setText(parseInt(TARGET_IMG_INFO.curWidth * 100 / TARGET_IMG_INFO.realWidth + '') + '%');
        TARGET_IMG_INFO.imgTipTimeout = setTimeout(() => {
            TARGET_IMG_INFO.imgTipEl.hidden = true;
        }, 1000);
    }
}
function setImgViewPosition(imgZoomSize, rotate) {
    if (imgZoomSize) {
        TARGET_IMG_INFO.imgViewEl.setAttribute('width', imgZoomSize.width);
        TARGET_IMG_INFO.imgViewEl.style.setProperty('margin-top', imgZoomSize.top, 'important');
        TARGET_IMG_INFO.imgViewEl.style.setProperty('margin-left', imgZoomSize.left, 'important');
    }
    const rotateDeg = rotate ? rotate : 0;
    TARGET_IMG_INFO.imgViewEl.style.transform = 'rotate(' + rotateDeg + 'deg)';
    TARGET_IMG_INFO.rotate = rotateDeg;
}
function refreshImg(imgSrc, imgAlt) {
    const src = imgSrc ? imgSrc : TARGET_IMG_INFO.imgViewEl.src;
    const alt = imgAlt ? imgAlt : TARGET_IMG_INFO.imgViewEl.alt;
    if (src) {
        let realImg = new Image();
        realImg.src = src;
        REAL_IMG_INTERVAL = setInterval((img) => {
            if (img.width > 0 || img.height > 0) {
                clearInterval(REAL_IMG_INTERVAL);
                REAL_IMG_INTERVAL = null;
                let imgZoomSize = calculateImgZoomSize(img, TARGET_IMG_INFO);
                setImgViewPosition(imgZoomSize, 0);
                renderImgView(src, alt);
                renderImgTip();
                TARGET_IMG_INFO.imgViewEl.style.setProperty('transform', DEFAULT_IMG_STYLES.transform);
                TARGET_IMG_INFO.imgViewEl.style.setProperty('filter', DEFAULT_IMG_STYLES.filter);
                TARGET_IMG_INFO.imgViewEl.style.setProperty('mix-blend-mode', DEFAULT_IMG_STYLES.mixBlendMode);
            }
        }, 40, realImg);
    }
}
/**
 * full-screen mode
 */
function showPlayerImg() {
    IMG_PLAYER = true;
    TARGET_IMG_INFO.imgViewEl.style.setProperty('display', 'none', 'important');
    TARGET_IMG_INFO.imgFooterEl.style.setProperty('display', 'none');
    TARGET_IMG_INFO.imgPlayerEl.style.setProperty('display', 'block');
    TARGET_IMG_INFO.imgPlayerImgViewEl.setAttribute('src', TARGET_IMG_INFO.imgViewEl.src);
    TARGET_IMG_INFO.imgPlayerImgViewEl.setAttribute('alt', TARGET_IMG_INFO.imgViewEl.alt);
    const windowWidth = document.documentElement.clientWidth || document.body.clientWidth;
    const windowHeight = document.documentElement.clientHeight || document.body.clientHeight;
    let newWidth, newHeight;
    if (IMG_FULL_SCREEN_MODE.STRETCH == DEFAULT_SETTINGS.imgFullScreenMode) {
        newWidth = windowWidth + 'px';
        newHeight = windowHeight + 'px';
    }
    else if (IMG_FULL_SCREEN_MODE.FILL == DEFAULT_SETTINGS.imgFullScreenMode) {
        newWidth = '100%';
        newHeight = '100%';
    }
    else {
        if (windowWidth <= windowHeight) {
            newWidth = windowWidth;
            newHeight = newWidth * TARGET_IMG_INFO.realHeight / TARGET_IMG_INFO.realWidth;
        }
        else {
            newHeight = windowHeight;
            newWidth = newHeight * TARGET_IMG_INFO.realWidth / TARGET_IMG_INFO.realHeight;
        }
        newWidth = newWidth + 'px';
        newHeight = newHeight + 'px';
    }
    TARGET_IMG_INFO.imgPlayerImgViewEl.setAttribute('width', newWidth);
    TARGET_IMG_INFO.imgPlayerImgViewEl.setAttribute('height', newHeight);
    TARGET_IMG_INFO.imgPlayerEl.addEventListener('click', closePlayerImg);
}
function closePlayerImg() {
    IMG_PLAYER = false;
    TARGET_IMG_INFO.imgViewEl.style.setProperty('display', 'block', 'important');
    TARGET_IMG_INFO.imgFooterEl.style.setProperty('display', 'block');
    TARGET_IMG_INFO.imgPlayerEl.style.setProperty('display', 'none');
    TARGET_IMG_INFO.imgPlayerImgViewEl.src = '';
    TARGET_IMG_INFO.imgPlayerImgViewEl.alt = '';
    TARGET_IMG_INFO.imgPlayerEl.removeEventListener('click', closePlayerImg);
}
function zoomAndRender(ratio, event) {
    let offsetSize = { offsetX: 0, offsetY: 0 };
    if (event) {
        offsetSize.offsetX = event.offsetX;
        offsetSize.offsetY = event.offsetY;
    }
    else {
        offsetSize.offsetX = TARGET_IMG_INFO.curWidth / 2;
        offsetSize.offsetY = TARGET_IMG_INFO.curHeight / 2;
    }
    const zoomData = zoom(ratio, TARGET_IMG_INFO, offsetSize);
    renderImgTip();
    TARGET_IMG_INFO.imgViewEl.setAttribute('width', zoomData.newWidth) + 'px';
    TARGET_IMG_INFO.imgViewEl.style.setProperty('margin-top', zoomData.top + 'px', 'important');
    TARGET_IMG_INFO.imgViewEl.style.setProperty('margin-left', zoomData.left + 'px', 'important');
}
function clickToolbarUl(event) {
    const targetElClass = event.target.className;
    switch (targetElClass) {
        case 'toolbar_zoom_im':
            zoomAndRender(0.1);
            break;
        case 'toolbar_zoom_out':
            zoomAndRender(-0.1);
            break;
        case 'toolbar_full_screen':
            showPlayerImg();
            break;
        case 'toolbar_refresh':
            refreshImg();
            break;
        case 'toolbar_rotate_left':
            TARGET_IMG_INFO.rotate -= 90;
            transform(TARGET_IMG_INFO);
            break;
        case 'toolbar_rotate_right':
            TARGET_IMG_INFO.rotate += 90;
            transform(TARGET_IMG_INFO);
            break;
        case 'toolbar_scale_x':
            TARGET_IMG_INFO.scaleX = !TARGET_IMG_INFO.scaleX;
            transform(TARGET_IMG_INFO);
            break;
        case 'toolbar_scale_y':
            TARGET_IMG_INFO.scaleY = !TARGET_IMG_INFO.scaleY;
            transform(TARGET_IMG_INFO);
            break;
        case 'toolbar_invert_color':
            TARGET_IMG_INFO.invertColor = !TARGET_IMG_INFO.invertColor;
            invertImgColor(TARGET_IMG_INFO.imgViewEl, TARGET_IMG_INFO.invertColor);
            break;
        case 'toolbar_copy':
            copyImage(TARGET_IMG_INFO.imgViewEl, TARGET_IMG_INFO.curWidth, TARGET_IMG_INFO.curHeight);
            break;
    }
}
const triggerkeyup = (event) => {
    //console.log('keyup', event, event.code);
    event.preventDefault();
    event.stopPropagation();
    switch (event.code) {
        case 'Escape': // Esc
            IMG_PLAYER ? closePlayerImg() : closeViewContainer();
            break;
        case 'ArrowUp':
            ARROW_PRESS_STATUS.arrowUp = false;
            break;
        case 'ArrowDown':
            ARROW_PRESS_STATUS.arrowDown = false;
            break;
        case 'ArrowLeft':
            ARROW_PRESS_STATUS.arrowLeft = false;
            break;
        case 'ArrowRight':
            ARROW_PRESS_STATUS.arrowRight = false;
            break;
    }
};
const triggerkeydown = (event) => {
    // console.log('keyup', event, event.code);
    event.preventDefault();
    event.stopPropagation();
    if (ARROW_PRESS_STATUS.arrowUp && ARROW_PRESS_STATUS.arrowLeft) {
        mousemoveImgView(null, { offsetX: -DEFAULT_SETTINGS.imageMoveSpeed, offsetY: -DEFAULT_SETTINGS.imageMoveSpeed });
        return;
    }
    else if (ARROW_PRESS_STATUS.arrowUp && ARROW_PRESS_STATUS.arrowRight) {
        mousemoveImgView(null, { offsetX: DEFAULT_SETTINGS.imageMoveSpeed, offsetY: -DEFAULT_SETTINGS.imageMoveSpeed });
        return;
    }
    else if (ARROW_PRESS_STATUS.arrowDown && ARROW_PRESS_STATUS.arrowLeft) {
        mousemoveImgView(null, { offsetX: -DEFAULT_SETTINGS.imageMoveSpeed, offsetY: DEFAULT_SETTINGS.imageMoveSpeed });
        return;
    }
    else if (ARROW_PRESS_STATUS.arrowDown && ARROW_PRESS_STATUS.arrowRight) {
        mousemoveImgView(null, { offsetX: DEFAULT_SETTINGS.imageMoveSpeed, offsetY: DEFAULT_SETTINGS.imageMoveSpeed });
        return;
    }
    switch (event.code) {
        case 'ArrowUp':
            mousemoveImgView(null, { offsetX: 0, offsetY: -DEFAULT_SETTINGS.imageMoveSpeed });
            ARROW_PRESS_STATUS.arrowUp = true;
            break;
        case 'ArrowDown':
            mousemoveImgView(null, { offsetX: 0, offsetY: DEFAULT_SETTINGS.imageMoveSpeed });
            ARROW_PRESS_STATUS.arrowDown = true;
            break;
        case 'ArrowLeft':
            mousemoveImgView(null, { offsetX: -DEFAULT_SETTINGS.imageMoveSpeed, offsetY: 0 });
            ARROW_PRESS_STATUS.arrowLeft = true;
            break;
        case 'ArrowRight':
            mousemoveImgView(null, { offsetX: DEFAULT_SETTINGS.imageMoveSpeed, offsetY: 0 });
            ARROW_PRESS_STATUS.arrowRight = true;
            break;
    }
};
const mousedownImgView = (event) => {
    // console.log('mousedownImgView', event);
    DRAGGING = true;
    event.stopPropagation();
    event.preventDefault();
    // 鼠标相对于图片的位置
    TARGET_IMG_INFO.moveX = TARGET_IMG_INFO.imgViewEl.offsetLeft - event.clientX;
    TARGET_IMG_INFO.moveY = TARGET_IMG_INFO.imgViewEl.offsetTop - event.clientY;
    // 鼠标按下时持续触发/移动事件 
    TARGET_IMG_INFO.viewContainerEl.onmousemove = mousemoveImgView;
    // 鼠标松开/回弹触发事件
    TARGET_IMG_INFO.viewContainerEl.onmouseup = mouseupImgView;
    TARGET_IMG_INFO.viewContainerEl.onmouseleave = mouseupImgView;
};
const mousemoveImgView = (event, offsetSize) => {
    if (!DRAGGING && !offsetSize) {
        return;
    }
    if (event) {
        TARGET_IMG_INFO.left = event.clientX + TARGET_IMG_INFO.moveX;
        TARGET_IMG_INFO.top = event.clientY + TARGET_IMG_INFO.moveY;
    }
    else if (offsetSize) {
        TARGET_IMG_INFO.left += offsetSize.offsetX;
        TARGET_IMG_INFO.top += offsetSize.offsetY;
    }
    else {
        return;
    }
    // 修改图片位置
    TARGET_IMG_INFO.imgViewEl.style.setProperty('margin-top', TARGET_IMG_INFO.top + 'px', 'important');
    TARGET_IMG_INFO.imgViewEl.style.setProperty('margin-left', TARGET_IMG_INFO.left + 'px', 'important');
};
const mouseupImgView = (event) => {
    // console.log('mouseup...');
    DRAGGING = false;
    event.preventDefault();
    event.stopPropagation();
    TARGET_IMG_INFO.imgViewEl.onmousemove = null;
    TARGET_IMG_INFO.imgViewEl.onmouseup = null;
};
const mousewheelViewContainer = (event) => {
    event.preventDefault();
    event.stopPropagation();
    // @ts-ignore
    zoomAndRender(0 < event.wheelDelta ? 0.1 : -0.1, event);
};
function addOrRemoveEvent(flag) {
    if (flag) {
        // close the popup layer (image-toolkit-view-container) via clicking pressing Esc
        document.addEventListener('keyup', triggerkeyup);
        document.addEventListener('keydown', triggerkeydown);
        TARGET_IMG_INFO.viewContainerEl.addEventListener('click', closeViewContainer);
        // drag the image via mouse
        TARGET_IMG_INFO.imgViewEl.onmousedown = mousedownImgView;
        // zoom the image via mouse wheel
        TARGET_IMG_INFO.imgViewEl.addEventListener('mousewheel', mousewheelViewContainer);
    }
    else {
        document.removeEventListener('keyup', triggerkeyup);
        document.removeEventListener('keydown', triggerkeydown);
        TARGET_IMG_INFO.viewContainerEl.removeEventListener('click', closeViewContainer);
        TARGET_IMG_INFO.imgViewEl.removeEventListener('mousedown', mousedownImgView);
        TARGET_IMG_INFO.viewContainerEl.removeEventListener('mousewheel', mousewheelViewContainer);
        if (REAL_IMG_INTERVAL) {
            clearInterval(REAL_IMG_INTERVAL);
            REAL_IMG_INTERVAL = null;
        }
    }
}

class ImageToolkitPlugin extends obsidian.Plugin {
    constructor() {
        super(...arguments);
        this.clickImage = (event) => {
            const target = event.target;
            if (TARGET_IMG_INFO.state || 'IMG' !== target.tagName) {
                return;
            }
            if (!this.settings.viewImageWithALink) {
                const targetParentEl = target.parentElement;
                if (targetParentEl && 'A' == targetParentEl.tagName) {
                    //console.warn('The image with a link cannot be clicked to view!');
                    return;
                }
            }
            renderViewContainer(target, this.app.workspace.containerEl);
        };
        this.toggleViewImage = (open) => {
            if (open) {
                document.on('click', `.CodeMirror-code img,.markdown-preview-section img,.view-content > .image-container img`, this.clickImage);
            }
            else {
                document.off('click', `.CodeMirror-code img,.markdown-preview-section img,.view-content > .image-container img`, this.clickImage);
            }
        };
        this.toggleViewImageInCPB = (open) => {
            if (open) {
                document.on('click', `.community-plugin-details img`, this.clickImage);
            }
            else {
                document.off('click', `.community-plugin-details img`, this.clickImage);
            }
        };
    }
    onload() {
        return __awaiter(this, void 0, void 0, function* () {
            console.log('loading obsidian-image-toolkit plugin...');
            yield this.loadSettings();
            // plugin settings
            this.addSettingTab(new ImageToolkitSettingTab(this.app, this));
            this.toggleViewImage(this.settings.viewImageToggle);
            this.toggleViewImageInCPB(this.settings.viewImageInCPB);
            // this.registerDomEvent(document, 'click', this.clickImage);
        });
    }
    onunload() {
        console.log('unloading obsidian-image-toolkit plugin', this.settings);
        removeViewContainer();
    }
    loadSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            this.settings = Object.assign({}, DEFAULT_SETTINGS, yield this.loadData());
        });
    }
    saveSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.saveData(this.settings);
        });
    }
}

module.exports = ImageToolkitPlugin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
